const fs = require('fs');
const s = fs.readFileSync('src/App.jsx','utf8');
let i=0,n=s.length; let stack=[]; let inJS=0, inStr=null; function posToLineCol(p){ const lines=s.slice(0,p).split('\n'); return {line:lines.length,col:lines[lines.length-1].length+1}; }
while(i<n){ const ch=s[i]; if(inStr){ if(ch==='\\' && i+1<n){ i+=2; continue;} if(ch===inStr){ inStr=null; i++; continue;} if(ch==='\n'){ i++; continue;} i++; continue;} if(ch==='"' || ch==="'" || ch==='`'){ inStr=ch; i++; continue;} if(ch==='{'){ inJS++; i++; continue;} if(ch==='}'){ if(inJS>0) inJS--; i++; continue;} if(inJS>0){ i++; continue;} if(ch==='<'){ if(s.substr(i,4)==='<!--'){ const end=s.indexOf('-->', i+4); if(end===-1) break; i=end+3; continue; } const end=s.indexOf('>', i+1); if(end===-1) break; const token=s.slice(i+1,end).trim(); const isClose = token[0]==='/'; const isSelfClose = token.endsWith('/'); const m=token.match(/^\/?\s*([A-Za-z0-9-_:]+)/); const name=m?m[1]:null; const p=posToLineCol(i); if(!isClose && !isSelfClose && name && name!=='!'){ stack.push({name, pos:i, line:p.line, col:p.col}); } else if(isClose){ const idx=stack.map(x=>x.name).lastIndexOf(name); if(idx===-1){ console.log('Unmatched closing',name,'at',p); process.exit(0);} else stack.splice(idx,1); } i=end+1; continue;} i++; }
if(stack.length){ console.log('Unclosed tags count',stack.length); console.log('First unclosed:', stack[0]); console.log('Last few open tags:', stack.slice(-10)); } else console.log('All tags balanced');
